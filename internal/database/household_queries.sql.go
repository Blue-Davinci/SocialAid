// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: household_queries.sql

package database

import (
	"context"
	"time"
)

const createNewHousehold = `-- name: CreateNewHousehold :one
INSERT INTO households (program_id, geolocation_id, name) 
VALUES ($1, $2, $3) 
RETURNING id, created_at
`

type CreateNewHouseholdParams struct {
	ProgramID     int32
	GeolocationID int32
	Name          string
}

type CreateNewHouseholdRow struct {
	ID        int32
	CreatedAt time.Time
}

func (q *Queries) CreateNewHousehold(ctx context.Context, arg CreateNewHouseholdParams) (CreateNewHouseholdRow, error) {
	row := q.db.QueryRowContext(ctx, createNewHousehold, arg.ProgramID, arg.GeolocationID, arg.Name)
	var i CreateNewHouseholdRow
	err := row.Scan(&i.ID, &i.CreatedAt)
	return i, err
}

const createNewHouseholdHead = `-- name: CreateNewHouseholdHead :one
INSERT INTO household_heads (household_id, name, national_id, phone_number, age)
VALUES ($1, $2, $3, $4, $5)
RETURNING id, created_at, updated_at
`

type CreateNewHouseholdHeadParams struct {
	HouseholdID int32
	Name        string
	NationalID  string
	PhoneNumber string
	Age         int32
}

type CreateNewHouseholdHeadRow struct {
	ID        int32
	CreatedAt time.Time
	UpdatedAt time.Time
}

func (q *Queries) CreateNewHouseholdHead(ctx context.Context, arg CreateNewHouseholdHeadParams) (CreateNewHouseholdHeadRow, error) {
	row := q.db.QueryRowContext(ctx, createNewHouseholdHead,
		arg.HouseholdID,
		arg.Name,
		arg.NationalID,
		arg.PhoneNumber,
		arg.Age,
	)
	var i CreateNewHouseholdHeadRow
	err := row.Scan(&i.ID, &i.CreatedAt, &i.UpdatedAt)
	return i, err
}
